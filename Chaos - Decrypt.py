"""
Encrypted file structure:
0000000 3030 3030 3030 3030 3030 3030 3230 3433  ----> file size
0000010 eeae 7aaa 8a19 b3d8 4b70 8538 435a cc83  ----> IV
0000020 f0f5 89b9 395e afe4 576b 0f87 95c0 26d4  ----> start encrypted text
0000030 f877 dc39 a9be f682 45bd e4d3 7127 5b92
0000040 e89e fb9e 391e 5aee de8b 337f 0f80 edab
0000050 2ee6 069e 9643 b913 da14 c11a aced 3bcb
0000060 d8ac c133 95f8 bea2 36f3 8fbc 529f 6e60
0000070 0c7f 8ded 33a6 3ea2 7d94 4133 97be f2b7
0000080 8464 46e6 0c59 e2c7 4459 216f beef 2352
0000090 ef7e 5b8c eb95 8e38 0190 c6e5 3461 9de2
00000a0 ae84 c3b6 3ea1 4b29 4d9e e85e bb7a 4901
00000b0 c5d3 2cc3 a2aa a8dd f942 fafb dd71 5995
00000c0 cb71 528f 92fb 7199 13c6 b74d 9fdf 772e
00000d0 cad5 46a2 40cd cb6d 0b39 1691 444a b4fc
00000e0 d3b5 1e28 5efa 378e 3588 967e cf22 082c
00000f0 e8df 977d 3092 3fa6 55d4 01bd 5871 8e28
0000100 72d9 98cf bf08 ad5d 7700 92fb 7a96 4f47
0000110
"""

import hashlib
from Crypto.Cipher import AES

# open the encrypted file
filename = 'encrypted_file'
file = open(filename, 'rb')

# read the IV from address 0x10
file.seek(16, 0)
iv = file.read(16)

# read the encrypted data
file.seek(32, 0)
data = file.read()

# calculate the key
hash = hashlib.sha256(b'sahay')
key = hash.digest()

# decrypt and print the text
cipher = AES.new(key, AES.MODE_CBC, iv)
print "Done: " + cipher.decrypt(data)
